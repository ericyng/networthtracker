version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=networthtracker
      - POSTGRES_USER=networthtracker
      - POSTGRES_PASSWORD=your_secure_password_here
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U networthtracker"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django Application
  web:
    build: .
    volumes:
      - static_files:/app/staticfiles
      - media_files:/app/media
      - ./logs:/app/logs
    environment:
      - DEBUG=False
      - DJANGO_SETTINGS_MODULE=backend.docker_settings
      - DATABASE_URL=postgresql://networthtracker:your_secure_password_here@db:5432/networthtracker
      - SECRET_KEY=your-secret-key-here
      - ALLOWED_HOSTS=net-worth-tracker.gen3ric-labs.com,localhost,127.0.0.1
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 --timeout 120 backend.wsgi:application"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_files:/app/staticfiles:ro
      - media_files:/app/media:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    restart: unless-stopped

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  static_files:
  media_files: 